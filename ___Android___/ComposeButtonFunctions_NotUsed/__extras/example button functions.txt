1                
                var count = remember {
                    mutableIntStateOf(0)
                }

                Column (
                    modifier = Modifier.fillMaxSize().pad,
                    verticalArrangement = Arrangement.Center,
                    horizontalAlignment = Alignment.CenterHorizontally
                ) {
                    Text(text = count.value.toString() )
                    Button(onClick = {
                        Log.d("devDEBUG", "cliquei")
                        count.value++
                    }) {
                        Text(text = "click me")
                    }
                }


-----

2

CrashCourseComposeTheme {
                // A surface container using the 'background' color from the theme
                var name by remember {
                    mutableStateOf("")
                }
                var names by remember {
                    mutableStateOf(listOf<String>())
                }
                Column (
                    modifier = Modifier
                        .fillMaxSize()
                        .padding(12.dp)
                ) {
                    Row (
                        modifier = Modifier.fillMaxWidth()
                    ) {
                        OutlinedTextField(
                            value = name,
                            onValueChange = { text ->
                                name = text
                            },
                            modifier = Modifier.weight(1f)
                        )
                        Spacer(modifier = Modifier.width(16.dp))
                        Button(onClick = {
                            if(name.isNotBlank()){
                                names = names + name
                                name = ""
                            }
                        }) {
                            Text(
                                text = "Add"
                            )
                        }
                    }

                    LazyColumn {
                        items(names) {currentName ->
                            Text(
                                text = currentName,
                                modifier = Modifier.fillMaxWidth().padding(16.dp)
                            )
                            Divider()
                        }
                    }

                }

            }

-----

3


@Composable
fun NameList(
    names: List<String>
) {
    LazyColumn {
        items(names) {currentName ->
            Text(
                text = currentName,
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(16.dp)
            )
            Divider()
        }
    }
}